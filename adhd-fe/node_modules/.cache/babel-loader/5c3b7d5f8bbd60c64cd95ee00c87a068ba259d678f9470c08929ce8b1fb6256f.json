{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js\",\n  _s = $RefreshSig$();\nimport { Container, Button, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n\n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n  const handleButtonClick = async () => {\n    try {\n      const response = \"\";\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Failed to initiate transcription:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error initiating transcription:', error);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (webCamRef.current && videoRef.current) {\n        const video = videoRef.current;\n        const currentTime = video.currentTime;\n        console.log(currentTime);\n\n        // Send the currentTime to the Python backend\n        sendTimestampToBackend(currentTime);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const sendTimestampToBackend = async timestamp => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n      } else {\n        console.error('Failed to send timestamp to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending timestamp:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        marginTop: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        style: {\n          marginRight: window.innerWidth / 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef // Add a ref to the video element\n          ,\n          controls: true,\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          src: require(\"./2-Minute Neuroscience_ Autism.mp4\") // You need to use require to specify the video source correctly\n          ,\n          style: {\n            width: window.innerWidth / 2.5,\n            height: window.innerHeight / 2.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webCamRef,\n          imageSmoothing: true,\n          audio: false,\n          height: window.innerHeight / 2.5,\n          width: window.innerWidth / 2.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleButtonClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PGWoDwXFGvJQlVIFtby9PU8ovj4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Button","Grid","Typography","Dialog","DialogTitle","DialogContent","DialogActions","Radio","RadioGroup","FormControlLabel","Webcam","useEffect","useRef","useState","React","jsxDEV","_jsxDEV","App","_s","webCamRef","videoRef","openMCQ","setOpenMCQ","selectedOption","setSelectedOption","handleOpenMCQPopup","handleCloseMCQPopup","handleMCQChange","event","target","value","mcqQuestion","mcqOptions","handleButtonClick","response","ok","data","json","console","log","error","statusText","intervalId","setInterval","current","video","currentTime","sendTimestampToBackend","clearInterval","timestamp","fetch","method","headers","body","JSON","stringify","message","style","justifyContent","alignItems","alignContent","flex","children","container","spacing","marginTop","item","xs","md","lg","marginRight","window","innerWidth","ref","controls","autoPlay","loop","muted","src","require","width","height","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","imageSmoothing","audio","variant","color","onClick","_c","$RefreshReg$"],"sources":["/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js"],"sourcesContent":["import { Container, Button, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\n\nfunction App() {\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n\n\n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n\n  \n\n  const handleButtonClick = async () => {\n    try {\n \n\n      const response = \"\"\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Failed to initiate transcription:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error initiating transcription:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (webCamRef.current && videoRef.current) {\n        const video = videoRef.current;\n        const currentTime = video.currentTime;\n        console.log(currentTime);\n        \n        // Send the currentTime to the Python backend\n        sendTimestampToBackend(currentTime);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const sendTimestampToBackend = async (timestamp) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ timestamp }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n      } else {\n        console.error('Failed to send timestamp to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending timestamp:', error);\n    }\n  };\n\n  return (\n    <Container\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flex: 1,\n      }}\n    >\n      <Grid container spacing={5} style={{ marginTop: 32 }}>\n        <Grid\n          item\n          xs={5}\n          md={5}\n          lg={5}\n          style={{ marginRight: window.innerWidth / 10 }}\n        >\n          <video\n            ref={videoRef} // Add a ref to the video element\n            controls\n            autoPlay\n            loop\n            muted\n            src={require(\"./2-Minute Neuroscience_ Autism.mp4\")} // You need to use require to specify the video source correctly\n            style={{\n              width: window.innerWidth / 2.5,\n              height: window.innerHeight / 2.5,\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={5} md={5} lg={5}>\n          <Webcam\n            ref={webCamRef}\n            imageSmoothing={true}\n            audio={false}\n            height={window.innerHeight / 2.5}\n            width={window.innerWidth / 2.5}\n          />\n        </Grid>\n      </Grid>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={handleButtonClick}>\n        Click Me\n      </Button>\n    </Container>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}