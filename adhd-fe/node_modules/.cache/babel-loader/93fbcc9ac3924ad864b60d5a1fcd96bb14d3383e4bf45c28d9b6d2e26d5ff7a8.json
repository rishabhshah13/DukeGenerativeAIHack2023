{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js\",\n  _s = $RefreshSig$();\nimport { Container, Button, Grid, CircularProgress, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false); // State to track if answer is submitted\n\n  const [displayText, setDisplayText] = useState('Default text to display');\n\n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n  // Example function to change the text (if needed)\n  const updateText = text => {\n    setDisplayText(text);\n  };\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Function to handle MCQ submission\n  const handleSubmitMCQ = () => {\n    // Check if the selected answer is correct\n    if (selectedOption === \"Paris\") {\n      setIsAnswerCorrect(true); // Correct answer\n    } else {\n      setIsAnswerCorrect(false); // Incorrect answer\n    }\n    // setOpenMCQ(false); // Close the MCQ popup\n    setAnswerSubmitted(true); // Set the answer as submitted\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n  const handleClose = () => {\n    // Reset the dialog states\n    setAnswerSubmitted(false);\n    setIsAnswerCorrect(null);\n    setSelectedOption('');\n    setOpenMCQ(false);\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (webCamRef.current && videoRef.current) {\n        const video = videoRef.current;\n        const currentTime = video.currentTime;\n        console.log(currentTime);\n\n        // Send the currentTime to the Python backend\n        sendTimestampToBackend(currentTime);\n        setCurrentTime(currentTime);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const sendTimestampToBackend = async timestamp => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n      } else {\n        console.error('Failed to send timestamp to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending timestamp:', error);\n    }\n  };\n  const handleButtonClick = async () => {\n    try {\n      // Step 1: Get Video Transcriptions ---------------------------------------------------------------------------------------\n\n      const videoPath = '/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/2-Minute Neuroscience_ Autism.mp4';\n      const transcribed_video_text_response = await fetch(`http://127.0.0.1:8000/transcribe?video_path=${encodeURIComponent(videoPath)}`);\n      const transcribed_video_text = await transcribed_video_text_response.json();\n      console.log(transcribed_video_text);\n\n      // Convert the object to a JSON string\n      const transcribedVideoTextJSON = JSON.stringify(transcribed_video_text.text);\n      const transcribeddataframe = JSON.stringify(transcribed_video_text.data);\n      updateText(transcribedVideoTextJSON);\n\n      // Encode the JSON string for URL usage\n      const encodedTranscribedVideoText = encodeURIComponent(transcribedVideoTextJSON);\n      const encodedtranscribeddataframe = encodeURIComponent(transcribeddataframe);\n\n      // Step 2: Get Video Segments ---------------------------------------------------------------------------------------------\n\n      const videosegments_response = await fetch(`http://127.0.0.1:8000/segment_transcript?text=${encodedTranscribedVideoText}`);\n      const videosegments = await videosegments_response.json();\n      console.log(videosegments);\n\n      // const videosegmentsdict_response = encodeURIComponent(JSON.stringify(videosegments));\n      // const videosegmentsdict = await videosegmentsdict_response.json();\n\n      const contentanalyeriniturlvar = `http://127.0.0.1:8000/contentanalyerinit?dataframe=${encodedtranscribeddataframe}&sections_dict=${videosegments}`;\n      const noresponse = await fetch(contentanalyeriniturlvar);\n\n      // Step 2: Look for distraction -------------------------------------------------------------------------------------------\n\n      const user_distracted_response = await fetch(`http://127.0.0.1:8000/track_gaze`);\n      const user_distracted = await user_distracted_response.json();\n\n      // console.log(user_distracted)\n      if (user_distracted.distracted) {\n        // const second_response = await fetch(`http://127.0.0.1:8000/update_timestamp`);\n        // const second = await second_response.json()\n        setCurrentTime(currentTime);\n        console.log(currentTime);\n      }\n\n      // Step 3: Get Section in which user was Distracted ------------------------------------------------------------------------\n      // const second = 69;\n\n      const sectionbysecond_response = await fetch(`http://127.0.0.1:8000/find_section_by_second?second=${currentTime}`);\n      const sectionbysecond = await sectionbysecond_response.json();\n      console.log(sectionbysecond);\n      sectionbysecond = encodeURIComponent(JSON.stringify(sectionbysecond));\n\n      // Step 4: Generate Questions ----------------------------------------------------------------------------------------------\n      // const generate_questions_responce = await fetch(`http://127.0.0.1:8000/generate_questions?second=${currentTime}`);\n      const questions_response = await fetch(`http://127.0.0.1:8000/generate_questions?section_content=${sectionbysecond}`);\n      const questions = await questions_response.json();\n      console.log(questions);\n\n      // const summary = await fetch(`http://127.0.0.1:8000/create_summary?text=${sectionbysecond}`);\n\n      // const response = ''\n      // const response = await fetch(`http://127.0.0.1:8000/get_timestamp`);\n    } catch (error) {\n      console.error(\"Error sending timestamp:\", error);\n    }\n  };\n\n  // const sendTimestampToBackend = async (timestamp) => {\n  //   try {\n  //     const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ timestamp }),\n  //     });\n\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       console.log(data.message);\n  //     } else {\n  //       console.error('Failed to send timestamp to the backend');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error sending timestamp:', error);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        marginTop: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        style: {\n          marginRight: window.innerWidth / 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef // Add a ref to the video element\n          ,\n          controls: true,\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          src: require(\"./2-Minute Neuroscience_ Autism.mp4\") // You need to use require to specify the video source correctly\n          ,\n          style: {\n            width: window.innerWidth / 2.5,\n            height: window.innerHeight / 2.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webCamRef,\n          imageSmoothing: true,\n          audio: false,\n          height: window.innerHeight / 2.5,\n          width: window.innerWidth / 2.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleOpenMCQPopup,\n        children: \"Take MCQ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openMCQ,\n      onClose: handleCloseMCQPopup,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MCQ Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: mcqQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"mcq-options\",\n          value: selectedOption,\n          onChange: handleMCQChange,\n          children: mcqOptions.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 24\n            }, this),\n            label: option\n            // Apply conditional styling if the answer is correct and selected\n            ,\n            style: isAnswerCorrect && selectedOption === \"Paris\" && option === \"Paris\" ? {\n              color: 'green'\n            } : {}\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }, this), isAnswerCorrect === false && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: \"Incorrect answer. Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: !answerSubmitted ?\n        /*#__PURE__*/\n        // Show these buttons only if the answer has not been submitted\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseMCQPopup,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmitMCQ,\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Show close button only after the answer is submitted\n        _jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      children: \"Upload Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleButtonClick,\n      children: \"Process Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: updateText,\n        children: \"Update Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      children: displayText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"izYYj+pRQpxULyK2WSxEFZCMgZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Button","Grid","CircularProgress","Typography","Dialog","DialogTitle","DialogContent","DialogActions","Radio","RadioGroup","FormControlLabel","Webcam","useEffect","useRef","useState","React","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","webCamRef","videoRef","currentTime","setCurrentTime","openMCQ","setOpenMCQ","selectedOption","setSelectedOption","isAnswerCorrect","setIsAnswerCorrect","answerSubmitted","setAnswerSubmitted","displayText","setDisplayText","updateText","text","handleOpenMCQPopup","handleCloseMCQPopup","handleMCQChange","event","target","value","handleSubmitMCQ","mcqQuestion","mcqOptions","handleClose","intervalId","setInterval","current","video","console","log","sendTimestampToBackend","clearInterval","timestamp","response","fetch","method","headers","body","JSON","stringify","ok","data","json","message","error","handleButtonClick","videoPath","transcribed_video_text_response","encodeURIComponent","transcribed_video_text","transcribedVideoTextJSON","transcribeddataframe","encodedTranscribedVideoText","encodedtranscribeddataframe","videosegments_response","videosegments","contentanalyeriniturlvar","noresponse","user_distracted_response","user_distracted","distracted","sectionbysecond_response","sectionbysecond","questions_response","questions","style","justifyContent","alignItems","alignContent","flex","children","container","spacing","marginTop","item","xs","md","lg","marginRight","window","innerWidth","ref","controls","autoPlay","loop","muted","src","require","width","height","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","imageSmoothing","audio","display","mb","variant","color","onClick","open","onClose","name","onChange","map","option","index","control","label","_c","$RefreshReg$"],"sources":["/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js"],"sourcesContent":["import { Container, Button, Grid, CircularProgress, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\nimport { Box } from \"@mui/material\";\n\nfunction App() {\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false); // State to track if answer is submitted\n\n  const [displayText, setDisplayText] = useState('Default text to display');\n  \n  \n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n  // Example function to change the text (if needed)\n  const updateText = (text) => {\n    setDisplayText(text);\n  };\n\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Function to handle MCQ submission\n  const handleSubmitMCQ = () => {\n    // Check if the selected answer is correct\n    if (selectedOption === \"Paris\") {\n      setIsAnswerCorrect(true); // Correct answer\n    } else {\n      setIsAnswerCorrect(false); // Incorrect answer\n    }\n    // setOpenMCQ(false); // Close the MCQ popup\n    setAnswerSubmitted(true); // Set the answer as submitted\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n\n  const handleClose = () => {\n    // Reset the dialog states\n    setAnswerSubmitted(false);\n    setIsAnswerCorrect(null);\n    setSelectedOption('');\n    setOpenMCQ(false);\n  };\n\n    useEffect(() => {\n      const intervalId = setInterval(() => {\n        if (webCamRef.current && videoRef.current) {\n          const video = videoRef.current;\n          const currentTime = video.currentTime;\n          console.log(currentTime);\n          \n          // Send the currentTime to the Python backend\n          sendTimestampToBackend(currentTime);\n          setCurrentTime(currentTime)\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(intervalId);\n      };\n    }, []);\n\n    const sendTimestampToBackend = async (timestamp) => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ timestamp }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data.message);\n        } else {\n          console.error('Failed to send timestamp to the backend');\n        }\n      } catch (error) {\n        console.error('Error sending timestamp:', error);\n      }\n    };\n\n  const handleButtonClick = async () => {\n    try {\n      // Step 1: Get Video Transcriptions ---------------------------------------------------------------------------------------\n      \n      const videoPath = '/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/2-Minute Neuroscience_ Autism.mp4';\n      const transcribed_video_text_response = await fetch(`http://127.0.0.1:8000/transcribe?video_path=${encodeURIComponent(videoPath)}`);\n      \n      const transcribed_video_text = await transcribed_video_text_response.json()\n      console.log(transcribed_video_text)\n\n      // Convert the object to a JSON string\n      const transcribedVideoTextJSON = JSON.stringify(transcribed_video_text.text);\n      const transcribeddataframe= JSON.stringify(transcribed_video_text.data);\n      updateText(transcribedVideoTextJSON)\n\n      // Encode the JSON string for URL usage\n      const encodedTranscribedVideoText = encodeURIComponent(transcribedVideoTextJSON);\n      const encodedtranscribeddataframe = encodeURIComponent(transcribeddataframe);\n\n      // Step 2: Get Video Segments ---------------------------------------------------------------------------------------------\n\n      const videosegments_response = await fetch(`http://127.0.0.1:8000/segment_transcript?text=${encodedTranscribedVideoText}`);\n      const videosegments = await videosegments_response.json();\n      console.log(videosegments)\n\n      // const videosegmentsdict_response = encodeURIComponent(JSON.stringify(videosegments));\n      // const videosegmentsdict = await videosegmentsdict_response.json();\n\n      const contentanalyeriniturlvar = `http://127.0.0.1:8000/contentanalyerinit?dataframe=${encodedtranscribeddataframe}&sections_dict=${videosegments}`;\n      const noresponse = await fetch(contentanalyeriniturlvar);\n      \n      \n      // Step 2: Look for distraction -------------------------------------------------------------------------------------------\n      \n      const user_distracted_response = await fetch(`http://127.0.0.1:8000/track_gaze`)\n      const user_distracted = await user_distracted_response.json()\n\n      // console.log(user_distracted)\n      if (user_distracted.distracted) {\n        // const second_response = await fetch(`http://127.0.0.1:8000/update_timestamp`);\n        // const second = await second_response.json()\n        setCurrentTime(currentTime)\n        console.log(currentTime)\n      } \n      \n      // Step 3: Get Section in which user was Distracted ------------------------------------------------------------------------\n      // const second = 69;\n      \n      const sectionbysecond_response = await fetch(`http://127.0.0.1:8000/find_section_by_second?second=${currentTime}`);\n      const sectionbysecond = await sectionbysecond_response.json();\n      console.log(sectionbysecond);\n      sectionbysecond = encodeURIComponent(JSON.stringify(sectionbysecond));\n\n\n      // Step 4: Generate Questions ----------------------------------------------------------------------------------------------\n      // const generate_questions_responce = await fetch(`http://127.0.0.1:8000/generate_questions?second=${currentTime}`);\n      const questions_response = await fetch(`http://127.0.0.1:8000/generate_questions?section_content=${sectionbysecond}`);\n      const questions = await questions_response.json()\n      console.log(questions)\n\n\n      // const summary = await fetch(`http://127.0.0.1:8000/create_summary?text=${sectionbysecond}`);\n\n\n      // const response = ''\n      // const response = await fetch(`http://127.0.0.1:8000/get_timestamp`);\n      \n     } catch (error) {\n      console.error(\"Error sending timestamp:\", error);\n    }};\n\n  // const sendTimestampToBackend = async (timestamp) => {\n  //   try {\n  //     const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify({ timestamp }),\n  //     });\n\n  //     if (response.ok) {\n  //       const data = await response.json();\n  //       console.log(data.message);\n  //     } else {\n  //       console.error('Failed to send timestamp to the backend');\n  //     }\n  //   } catch (error) {\n  //     console.error('Error sending timestamp:', error);\n  //   }\n  // };\n\n  return (\n    <Container\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flex: 1,\n      }}\n    >\n      <Grid container spacing={5} style={{ marginTop: 32 }}>\n        <Grid\n          item\n          xs={5}\n          md={5}\n          lg={5}\n          style={{ marginRight: window.innerWidth / 10 }}\n        >\n          <video\n            ref={videoRef} // Add a ref to the video element\n            controls\n            autoPlay\n            loop\n            muted\n            src={require(\"./2-Minute Neuroscience_ Autism.mp4\")} // You need to use require to specify the video source correctly\n            style={{\n              width: window.innerWidth / 2.5,\n              height: window.innerHeight / 2.5,\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={5} md={5} lg={5}>\n          <Webcam\n            ref={webCamRef}\n            imageSmoothing={true}\n            audio={false}\n            height={window.innerHeight / 2.5}\n            width={window.innerWidth / 2.5}\n          />\n        </Grid>\n      </Grid>\n\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpenMCQPopup}>\n        Take MCQ\n      </Button>\n    </Box>\n\n\n    {/* MCQ Popup Dialog */}\n    <Dialog open={openMCQ} onClose={handleCloseMCQPopup}>\n      <DialogTitle>MCQ Question</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">{mcqQuestion}</Typography>\n        <RadioGroup name=\"mcq-options\" value={selectedOption} onChange={handleMCQChange}>\n          {mcqOptions.map((option, index) => (\n            <FormControlLabel\n              key={index}\n              value={option}\n              control={<Radio />}\n              label={option}\n              // Apply conditional styling if the answer is correct and selected\n              style={isAnswerCorrect && selectedOption === \"Paris\" && option === \"Paris\" ? { color: 'green' } : {}}\n            />\n          ))}\n        </RadioGroup>\n        {/* Optionally display feedback */}\n        {isAnswerCorrect === false && (\n          <Typography color=\"error\">Incorrect answer. Try again!</Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {!answerSubmitted ? (\n          // Show these buttons only if the answer has not been submitted\n          <>\n            <Button onClick={handleCloseMCQPopup} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmitMCQ} color=\"primary\">\n              Submit\n            </Button>\n          </>\n        ) : (\n          // Show close button only after the answer is submitted\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n    \n\n      <Button variant=\"contained\" color=\"primary\" >\n        Upload Video\n      </Button>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={handleButtonClick}>\n        Process Video\n      </Button>\n\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\n        <Button variant=\"contained\" color=\"primary\" onClick={updateText}>\n          Update Text\n        </Button>\n      </Box>\n\n      {/* Display text from variable beneath the button */}\n      <Typography variant=\"h6\">\n        {displayText}\n      </Typography>\n\n\n    </Container>\n  );\n}\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}