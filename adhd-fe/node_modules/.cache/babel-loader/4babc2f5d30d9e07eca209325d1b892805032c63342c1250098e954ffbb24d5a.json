{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js\",\n  _s = $RefreshSig$();\nimport { Container, Button, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\nimport { Box } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false); // State to track if answer is submitted\n\n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = event => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Function to handle MCQ submission\n  const handleSubmitMCQ = () => {\n    // Check if the selected answer is correct\n    if (selectedOption === \"Paris\") {\n      setIsAnswerCorrect(true); // Correct answer\n    } else {\n      setIsAnswerCorrect(false); // Incorrect answer\n    }\n    // setOpenMCQ(false); // Close the MCQ popup\n    setAnswerSubmitted(true); // Set the answer as submitted\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n  const handleClose = () => {\n    // Reset the dialog states\n    setAnswerSubmitted(false);\n    setIsAnswerCorrect(null);\n    setSelectedOption('');\n    setOpenMCQ(false);\n  };\n  const handleButtonClick = async () => {\n    try {\n      // Step 1: Get Video Transcriptions ---------------------------------------------------------------------------------------\n\n      const videoPath = '/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/2-Minute Neuroscience_ Autism.mp4';\n      const transcribed_video_text = await fetch(`http://127.0.0.1:8000/transcribe?video_path=${encodeURIComponent(videoPath)}`);\n\n      // Convert the object to a JSON string\n      const transcribedVideoTextJSON = JSON.stringify(transcribed_video_text.text);\n      const transcribeddataframe = JSON.stringify(transcribed_video_text.data);\n\n      // Encode the JSON string for URL usage\n      const encodedTranscribedVideoText = encodeURIComponent(transcribedVideoTextJSON);\n      const encodedtranscribeddataframe = encodeURIComponent(transcribeddataframe);\n\n      // Step 2: Get Video Segments ---------------------------------------------------------------------------------------------\n\n      const videosegments = await fetch(`http://127.0.0.1:8000/segment_transcript?text=${encodedTranscribedVideoText}`);\n      const videosegmentsdict = encodeURIComponent(JSON.stringify(videosegments));\n      const contentanalyeriniturlvar = `http://127.0.0.1:8000/contentanalyerinit?dataframe=${encodedtranscribeddataframe}&sections_dict=${videosegmentsdict}`;\n      const noresponse = await fetch(contentanalyeriniturlvar);\n\n      // Step 3: Get Section in which user was Distracted ------------------------------------------------------------------------\n      const second = 69;\n      var sectionbysecond = await fetch(`http://127.0.0.1:8000/find_section_by_second?second=${second}`);\n      sectionbysecond = encodeURIComponent(JSON.stringify(sectionbysecond));\n\n      // Step 4: Generate Questions ----------------------------------------------------------------------------------------------\n      const generate_questions_responce = await fetch(`http://127.0.0.1:8000/generate_questions?second=${second}`);\n      const response = await fetch(`http://127.0.0.1:8000/generate_questions?section_content=${sectionbysecond}`);\n      const summary = await fetch(`http://127.0.0.1:8000/create_summary?text=${sectionbysecond}`);\n\n      // const response = ''\n      // const response = await fetch(`http://127.0.0.1:8000/get_timestamp`);\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Failed to initiate transcription:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error initiating transcription:', error);\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (webCamRef.current && videoRef.current) {\n        const video = videoRef.current;\n        const currentTime = video.currentTime;\n        console.log(currentTime);\n\n        // Send the currentTime to the Python backend\n        sendTimestampToBackend(currentTime);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  const sendTimestampToBackend = async timestamp => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          timestamp\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n      } else {\n        console.error('Failed to send timestamp to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending timestamp:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      flex: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        marginTop: 32\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        style: {\n          marginRight: window.innerWidth / 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          ref: videoRef // Add a ref to the video element\n          ,\n          controls: true,\n          autoPlay: true,\n          loop: true,\n          muted: true,\n          src: require(\"./2-Minute Neuroscience_ Autism.mp4\") // You need to use require to specify the video source correctly\n          ,\n          style: {\n            width: window.innerWidth / 2.5,\n            height: window.innerHeight / 2.5\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 5,\n        md: 5,\n        lg: 5,\n        children: /*#__PURE__*/_jsxDEV(Webcam, {\n          ref: webCamRef,\n          imageSmoothing: true,\n          audio: false,\n          height: window.innerHeight / 2.5,\n          width: window.innerWidth / 2.5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleOpenMCQPopup,\n        children: \"Take MCQ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openMCQ,\n      onClose: handleCloseMCQPopup,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MCQ Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: mcqQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          name: \"mcq-options\",\n          value: selectedOption,\n          onChange: handleMCQChange,\n          children: mcqOptions.map((option, index) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: option,\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 24\n            }, this),\n            label: option\n            // Apply conditional styling if the answer is correct and selected\n            ,\n            style: isAnswerCorrect && selectedOption === \"Paris\" && option === \"Paris\" ? {\n              color: 'green'\n            } : {}\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }, this), isAnswerCorrect === false && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: \"Incorrect answer. Try again!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: !answerSubmitted ?\n        /*#__PURE__*/\n        // Show these buttons only if the answer has not been submitted\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleCloseMCQPopup,\n            color: \"primary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleSubmitMCQ,\n            color: \"primary\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Show close button only after the answer is submitted\n        _jsxDEV(Button, {\n          onClick: handleClose,\n          color: \"primary\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleButtonClick,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2pSZbhljxvrIQoP9omG74psohaI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Button","Grid","Typography","Dialog","DialogTitle","DialogContent","DialogActions","Radio","RadioGroup","FormControlLabel","Webcam","useEffect","useRef","useState","React","Box","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","webCamRef","videoRef","openMCQ","setOpenMCQ","selectedOption","setSelectedOption","isAnswerCorrect","setIsAnswerCorrect","answerSubmitted","setAnswerSubmitted","handleOpenMCQPopup","handleCloseMCQPopup","handleMCQChange","event","target","value","handleSubmitMCQ","mcqQuestion","mcqOptions","handleClose","handleButtonClick","videoPath","transcribed_video_text","fetch","encodeURIComponent","transcribedVideoTextJSON","JSON","stringify","text","transcribeddataframe","data","encodedTranscribedVideoText","encodedtranscribeddataframe","videosegments","videosegmentsdict","contentanalyeriniturlvar","noresponse","second","sectionbysecond","generate_questions_responce","response","summary","ok","json","console","log","error","statusText","intervalId","setInterval","current","video","currentTime","sendTimestampToBackend","clearInterval","timestamp","method","headers","body","message","style","justifyContent","alignItems","alignContent","flex","children","container","spacing","marginTop","item","xs","md","lg","marginRight","window","innerWidth","ref","controls","autoPlay","loop","muted","src","require","width","height","innerHeight","fileName","_jsxFileName","lineNumber","columnNumber","imageSmoothing","audio","display","mb","variant","color","onClick","open","onClose","name","onChange","map","option","index","control","label","_c","$RefreshReg$"],"sources":["/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/App.js"],"sourcesContent":["import { Container, Button, Grid, Typography, Dialog, DialogTitle, DialogContent, DialogActions, Radio, RadioGroup, FormControlLabel } from \"@mui/material\";\nimport \"./App.css\";\nimport Webcam from \"react-webcam\";\nimport { useEffect, useRef, useState } from \"react\";\nimport React from 'react';\nimport { Box } from \"@mui/material\";\n\nfunction App() {\n  const webCamRef = useRef(null);\n  const videoRef = useRef(null);\n  const [openMCQ, setOpenMCQ] = useState(false); // state to control the MCQ popup\n  const [selectedOption, setSelectedOption] = useState(''); // state to track the selected MCQ option\n  const [isAnswerCorrect, setIsAnswerCorrect] = useState(null);\n  const [answerSubmitted, setAnswerSubmitted] = useState(false); // State to track if answer is submitted\n\n\n  // const handleButtonClick = () => {\n  //   alert(\"Heyyyy!\");\n  // };\n\n  // Function to handle opening the MCQ popup\n  const handleOpenMCQPopup = () => {\n    setOpenMCQ(true);\n  };\n\n  // Function to handle closing the MCQ popup\n  const handleCloseMCQPopup = () => {\n    setOpenMCQ(false);\n  };\n\n  // Function to handle MCQ option change\n  const handleMCQChange = (event) => {\n    setSelectedOption(event.target.value);\n  };\n\n  // Function to handle MCQ submission\n  const handleSubmitMCQ = () => {\n    // Check if the selected answer is correct\n    if (selectedOption === \"Paris\") {\n      setIsAnswerCorrect(true); // Correct answer\n    } else {\n      setIsAnswerCorrect(false); // Incorrect answer\n    }\n    // setOpenMCQ(false); // Close the MCQ popup\n    setAnswerSubmitted(true); // Set the answer as submitted\n  };\n\n  // Define the MCQ question and options\n  const mcqQuestion = \"What is the capital of France?\";\n  const mcqOptions = [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"];\n\n  const handleClose = () => {\n    // Reset the dialog states\n    setAnswerSubmitted(false);\n    setIsAnswerCorrect(null);\n    setSelectedOption('');\n    setOpenMCQ(false);\n  };\n  const handleButtonClick = async () => {\n    try {\n\n      // Step 1: Get Video Transcriptions ---------------------------------------------------------------------------------------\n      \n      const videoPath = '/Users/rishabhshah/Desktop/GenAIGit/DukeGenAI2023/adhd-fe/src/2-Minute Neuroscience_ Autism.mp4';\n      const transcribed_video_text = await fetch(`http://127.0.0.1:8000/transcribe?video_path=${encodeURIComponent(videoPath)}`);\n\n      // Convert the object to a JSON string\n      const transcribedVideoTextJSON = JSON.stringify(transcribed_video_text.text);\n      const transcribeddataframe= JSON.stringify(transcribed_video_text.data);\n\n      // Encode the JSON string for URL usage\n      const encodedTranscribedVideoText = encodeURIComponent(transcribedVideoTextJSON);\n      const encodedtranscribeddataframe = encodeURIComponent(transcribeddataframe);\n      \n\n      // Step 2: Get Video Segments ---------------------------------------------------------------------------------------------\n\n      const videosegments = await fetch(`http://127.0.0.1:8000/segment_transcript?text=${encodedTranscribedVideoText}`);\n      const videosegmentsdict = encodeURIComponent(JSON.stringify(videosegments));\n\n      const contentanalyeriniturlvar = `http://127.0.0.1:8000/contentanalyerinit?dataframe=${encodedtranscribeddataframe}&sections_dict=${videosegmentsdict}`;\n      const noresponse = await fetch(contentanalyeriniturlvar);\n      \n      \n      // Step 3: Get Section in which user was Distracted ------------------------------------------------------------------------\n      const second = 69;\n      \n      var sectionbysecond = await fetch(`http://127.0.0.1:8000/find_section_by_second?second=${second}`);\n      sectionbysecond = encodeURIComponent(JSON.stringify(sectionbysecond));\n\n\n      // Step 4: Generate Questions ----------------------------------------------------------------------------------------------\n      const generate_questions_responce = await fetch(`http://127.0.0.1:8000/generate_questions?second=${second}`);\n      const response = await fetch(`http://127.0.0.1:8000/generate_questions?section_content=${sectionbysecond}`);\n\n      const summary = await fetch(`http://127.0.0.1:8000/create_summary?text=${sectionbysecond}`);\n\n\n      // const response = ''\n      // const response = await fetch(`http://127.0.0.1:8000/get_timestamp`);\n      \n\n\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n      } else {\n        console.error('Failed to initiate transcription:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error initiating transcription:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (webCamRef.current && videoRef.current) {\n        const video = videoRef.current;\n        const currentTime = video.currentTime;\n        console.log(currentTime);\n        \n        // Send the currentTime to the Python backend\n        sendTimestampToBackend(currentTime);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  const sendTimestampToBackend = async (timestamp) => {\n    try {\n      const response = await fetch('http://127.0.0.1:8000/update_timestamp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ timestamp }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data.message);\n      } else {\n        console.error('Failed to send timestamp to the backend');\n      }\n    } catch (error) {\n      console.error('Error sending timestamp:', error);\n    }\n  };\n\n  return (\n    <Container\n      style={{\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        alignContent: \"center\",\n        flex: 1,\n      }}\n    >\n      <Grid container spacing={5} style={{ marginTop: 32 }}>\n        <Grid\n          item\n          xs={5}\n          md={5}\n          lg={5}\n          style={{ marginRight: window.innerWidth / 10 }}\n        >\n          <video\n            ref={videoRef} // Add a ref to the video element\n            controls\n            autoPlay\n            loop\n            muted\n            src={require(\"./2-Minute Neuroscience_ Autism.mp4\")} // You need to use require to specify the video source correctly\n            style={{\n              width: window.innerWidth / 2.5,\n              height: window.innerHeight / 2.5,\n            }}\n          />\n        </Grid>\n\n        <Grid item xs={5} md={5} lg={5}>\n          <Webcam\n            ref={webCamRef}\n            imageSmoothing={true}\n            audio={false}\n            height={window.innerHeight / 2.5}\n            width={window.innerWidth / 2.5}\n          />\n        </Grid>\n      </Grid>\n\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\n      <Button variant=\"contained\" color=\"primary\" onClick={handleOpenMCQPopup}>\n        Take MCQ\n      </Button>\n    </Box>\n\n\n    {/* MCQ Popup Dialog */}\n    <Dialog open={openMCQ} onClose={handleCloseMCQPopup}>\n      <DialogTitle>MCQ Question</DialogTitle>\n      <DialogContent>\n        <Typography variant=\"body1\">{mcqQuestion}</Typography>\n        <RadioGroup name=\"mcq-options\" value={selectedOption} onChange={handleMCQChange}>\n          {mcqOptions.map((option, index) => (\n            <FormControlLabel\n              key={index}\n              value={option}\n              control={<Radio />}\n              label={option}\n              // Apply conditional styling if the answer is correct and selected\n              style={isAnswerCorrect && selectedOption === \"Paris\" && option === \"Paris\" ? { color: 'green' } : {}}\n            />\n          ))}\n        </RadioGroup>\n        {/* Optionally display feedback */}\n        {isAnswerCorrect === false && (\n          <Typography color=\"error\">Incorrect answer. Try again!</Typography>\n        )}\n      </DialogContent>\n      <DialogActions>\n        {!answerSubmitted ? (\n          // Show these buttons only if the answer has not been submitted\n          <>\n            <Button onClick={handleCloseMCQPopup} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmitMCQ} color=\"primary\">\n              Submit\n            </Button>\n          </>\n        ) : (\n          // Show close button only after the answer is submitted\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        )}\n      </DialogActions>\n    </Dialog>\n    \n          \n      <Button variant=\"contained\" color=\"primary\" onClick={handleButtonClick}>\n        Click Me\n      </Button>\n    </Container>\n  );\n}\n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,EAAEC,KAAK,EAAEC,UAAU,EAAEC,gBAAgB,QAAQ,eAAe;AAC3J,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,cAAc;AACjC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,SAAS,GAAGV,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMW,QAAQ,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAG/D;EACA;EACA;;EAEA;EACA,MAAMmB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BP,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;;EAED;EACA,MAAMQ,mBAAmB,GAAGA,CAAA,KAAM;IAChCR,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;;EAED;EACA,MAAMS,eAAe,GAAIC,KAAK,IAAK;IACjCR,iBAAiB,CAACQ,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA,IAAIZ,cAAc,KAAK,OAAO,EAAE;MAC9BG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACLA,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC7B;IACA;IACAE,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMQ,WAAW,GAAG,gCAAgC;EACpD,MAAMC,UAAU,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC;EAExD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAV,kBAAkB,CAAC,KAAK,CAAC;IACzBF,kBAAkB,CAAC,IAAI,CAAC;IACxBF,iBAAiB,CAAC,EAAE,CAAC;IACrBF,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMiB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MAEF;;MAEA,MAAMC,SAAS,GAAG,iGAAiG;MACnH,MAAMC,sBAAsB,GAAG,MAAMC,KAAK,CAAE,+CAA8CC,kBAAkB,CAACH,SAAS,CAAE,EAAC,CAAC;;MAE1H;MACA,MAAMI,wBAAwB,GAAGC,IAAI,CAACC,SAAS,CAACL,sBAAsB,CAACM,IAAI,CAAC;MAC5E,MAAMC,oBAAoB,GAAEH,IAAI,CAACC,SAAS,CAACL,sBAAsB,CAACQ,IAAI,CAAC;;MAEvE;MACA,MAAMC,2BAA2B,GAAGP,kBAAkB,CAACC,wBAAwB,CAAC;MAChF,MAAMO,2BAA2B,GAAGR,kBAAkB,CAACK,oBAAoB,CAAC;;MAG5E;;MAEA,MAAMI,aAAa,GAAG,MAAMV,KAAK,CAAE,iDAAgDQ,2BAA4B,EAAC,CAAC;MACjH,MAAMG,iBAAiB,GAAGV,kBAAkB,CAACE,IAAI,CAACC,SAAS,CAACM,aAAa,CAAC,CAAC;MAE3E,MAAME,wBAAwB,GAAI,sDAAqDH,2BAA4B,kBAAiBE,iBAAkB,EAAC;MACvJ,MAAME,UAAU,GAAG,MAAMb,KAAK,CAACY,wBAAwB,CAAC;;MAGxD;MACA,MAAME,MAAM,GAAG,EAAE;MAEjB,IAAIC,eAAe,GAAG,MAAMf,KAAK,CAAE,uDAAsDc,MAAO,EAAC,CAAC;MAClGC,eAAe,GAAGd,kBAAkB,CAACE,IAAI,CAACC,SAAS,CAACW,eAAe,CAAC,CAAC;;MAGrE;MACA,MAAMC,2BAA2B,GAAG,MAAMhB,KAAK,CAAE,mDAAkDc,MAAO,EAAC,CAAC;MAC5G,MAAMG,QAAQ,GAAG,MAAMjB,KAAK,CAAE,4DAA2De,eAAgB,EAAC,CAAC;MAE3G,MAAMG,OAAO,GAAG,MAAMlB,KAAK,CAAE,6CAA4Ce,eAAgB,EAAC,CAAC;;MAG3F;MACA;;MAKA,IAAIE,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMZ,IAAI,GAAG,MAAMU,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;MACnB,CAAC,MAAM;QACLc,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEN,QAAQ,CAACO,UAAU,CAAC;MACzE;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EAGDzD,SAAS,CAAC,MAAM;IACd,MAAM2D,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIjD,SAAS,CAACkD,OAAO,IAAIjD,QAAQ,CAACiD,OAAO,EAAE;QACzC,MAAMC,KAAK,GAAGlD,QAAQ,CAACiD,OAAO;QAC9B,MAAME,WAAW,GAAGD,KAAK,CAACC,WAAW;QACrCR,OAAO,CAACC,GAAG,CAACO,WAAW,CAAC;;QAExB;QACAC,sBAAsB,CAACD,WAAW,CAAC;MACrC;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXE,aAAa,CAACN,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,sBAAsB,GAAG,MAAOE,SAAS,IAAK;IAClD,IAAI;MACF,MAAMf,QAAQ,GAAG,MAAMjB,KAAK,CAAC,wCAAwC,EAAE;QACrEiC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEhC,IAAI,CAACC,SAAS,CAAC;UAAE4B;QAAU,CAAC;MACpC,CAAC,CAAC;MAEF,IAAIf,QAAQ,CAACE,EAAE,EAAE;QACf,MAAMZ,IAAI,GAAG,MAAMU,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC6B,OAAO,CAAC;MAC3B,CAAC,MAAM;QACLf,OAAO,CAACE,KAAK,CAAC,yCAAyC,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACEnD,OAAA,CAAClB,SAAS;IACRmF,KAAK,EAAE;MACLC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,YAAY,EAAE,QAAQ;MACtBC,IAAI,EAAE;IACR,CAAE;IAAAC,QAAA,gBAEFtE,OAAA,CAAChB,IAAI;MAACuF,SAAS;MAACC,OAAO,EAAE,CAAE;MAACP,KAAK,EAAE;QAAEQ,SAAS,EAAE;MAAG,CAAE;MAAAH,QAAA,gBACnDtE,OAAA,CAAChB,IAAI;QACH0F,IAAI;QACJC,EAAE,EAAE,CAAE;QACNC,EAAE,EAAE,CAAE;QACNC,EAAE,EAAE,CAAE;QACNZ,KAAK,EAAE;UAAEa,WAAW,EAAEC,MAAM,CAACC,UAAU,GAAG;QAAG,CAAE;QAAAV,QAAA,eAE/CtE,OAAA;UACEiF,GAAG,EAAE3E,QAAS,CAAC;UAAA;UACf4E,QAAQ;UACRC,QAAQ;UACRC,IAAI;UACJC,KAAK;UACLC,GAAG,EAAEC,OAAO,CAAC,qCAAqC,CAAE,CAAC;UAAA;UACrDtB,KAAK,EAAE;YACLuB,KAAK,EAAET,MAAM,CAACC,UAAU,GAAG,GAAG;YAC9BS,MAAM,EAAEV,MAAM,CAACW,WAAW,GAAG;UAC/B;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAEP9F,OAAA,CAAChB,IAAI;QAAC0F,IAAI;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAP,QAAA,eAC7BtE,OAAA,CAACP,MAAM;UACLwF,GAAG,EAAE5E,SAAU;UACf0F,cAAc,EAAE,IAAK;UACrBC,KAAK,EAAE,KAAM;UACbP,MAAM,EAAEV,MAAM,CAACW,WAAW,GAAG,GAAI;UACjCF,KAAK,EAAET,MAAM,CAACC,UAAU,GAAG;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEP9F,OAAA,CAACF,GAAG;MAACmG,OAAO,EAAC,MAAM;MAAC/B,cAAc,EAAC,UAAU;MAACgC,EAAE,EAAE,CAAE;MAAA5B,QAAA,eACpDtE,OAAA,CAACjB,MAAM;QAACoH,OAAO,EAAC,WAAW;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAEtF,kBAAmB;QAAAuD,QAAA,EAAC;MAEzE;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAIN9F,OAAA,CAACd,MAAM;MAACoH,IAAI,EAAE/F,OAAQ;MAACgG,OAAO,EAAEvF,mBAAoB;MAAAsD,QAAA,gBAClDtE,OAAA,CAACb,WAAW;QAAAmF,QAAA,EAAC;MAAY;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACvC9F,OAAA,CAACZ,aAAa;QAAAkF,QAAA,gBACZtE,OAAA,CAACf,UAAU;UAACkH,OAAO,EAAC,OAAO;UAAA7B,QAAA,EAAEhD;QAAW;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eACtD9F,OAAA,CAACT,UAAU;UAACiH,IAAI,EAAC,aAAa;UAACpF,KAAK,EAAEX,cAAe;UAACgG,QAAQ,EAAExF,eAAgB;UAAAqD,QAAA,EAC7E/C,UAAU,CAACmF,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5B5G,OAAA,CAACR,gBAAgB;YAEf4B,KAAK,EAAEuF,MAAO;YACdE,OAAO,eAAE7G,OAAA,CAACV,KAAK;cAAAqG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAE;YACnBgB,KAAK,EAAEH;YACP;YAAA;YACA1C,KAAK,EAAEtD,eAAe,IAAIF,cAAc,KAAK,OAAO,IAAIkG,MAAM,KAAK,OAAO,GAAG;cAAEP,KAAK,EAAE;YAAQ,CAAC,GAAG,CAAC;UAAE,GALhGQ,KAAK;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMX,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACQ,CAAC,EAEZnF,eAAe,KAAK,KAAK,iBACxBX,OAAA,CAACf,UAAU;UAACmH,KAAK,EAAC,OAAO;UAAA9B,QAAA,EAAC;QAA4B;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CACnE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC,eAChB9F,OAAA,CAACX,aAAa;QAAAiF,QAAA,EACX,CAACzD,eAAe;QAAA;QACf;QACAb,OAAA,CAAAE,SAAA;UAAAoE,QAAA,gBACEtE,OAAA,CAACjB,MAAM;YAACsH,OAAO,EAAErF,mBAAoB;YAACoF,KAAK,EAAC,SAAS;YAAA9B,QAAA,EAAC;UAEtD;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACT9F,OAAA,CAACjB,MAAM;YAACsH,OAAO,EAAEhF,eAAgB;YAAC+E,KAAK,EAAC,SAAS;YAAA9B,QAAA,EAAC;UAElD;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,eACT,CAAC;QAAA;QAEH;QACA9F,OAAA,CAACjB,MAAM;UAACsH,OAAO,EAAE7E,WAAY;UAAC4E,KAAK,EAAC,SAAS;UAAA9B,QAAA,EAAC;QAE9C;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MACT;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAGP9F,OAAA,CAACjB,MAAM;MAACoH,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAACC,OAAO,EAAE5E,iBAAkB;MAAA6C,QAAA,EAAC;IAExE;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEhB;AAAC1F,EAAA,CApPQD,GAAG;AAAA4G,EAAA,GAAH5G,GAAG;AAuPZ,eAAeA,GAAG;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}